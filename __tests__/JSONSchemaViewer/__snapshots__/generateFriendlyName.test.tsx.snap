// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified only with items 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            (integer OR boolean)[]
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          array
        </span>
        <ul>
          <li>
            <details
              open={false}
            >
              <summary>
                <code>
                  items
                </code>
                Â 
                <span>
                  integer OR boolean
                </span>
              </summary>
              <div
                className="tabs-container"
              >
                <ul
                  aria-orientation="horizontal"
                  className="tabs"
                  role="tablist"
                >
                  <li
                    aria-selected={true}
                    onClick={[Function]}
                    tabIndex={0}
                  >
                    <span
                      style={
                        {
                          "opacity": "0.6",
                        }
                      }
                    >
                      integer
                    </span>
                  </li>
                  <li
                    aria-selected={false}
                    onClick={[Function]}
                    tabIndex={-1}
                  >
                    <span
                      style={
                        {
                          "opacity": "0.6",
                        }
                      }
                    >
                      boolean
                    </span>
                  </li>
                </ul>
                <div>
                  <div
                    hidden={false}
                    role="tabpanel"
                  >
                    <div
                      role="tabpanel"
                    >
                      <strong>
                        type
                      </strong>
                      Â :Â 
                      <span
                        style={
                          {
                            "opacity": "0.6",
                          }
                        }
                      >
                        integer
                      </span>
                      <div
                        style={
                          {
                            "marginTop": "var(--ifm-table-cell-padding)",
                          }
                        }
                      />
                    </div>
                  </div>
                  <div
                    hidden={true}
                    role="tabpanel"
                  >
                    <div
                      role="tabpanel"
                    >
                      <strong>
                        type
                      </strong>
                      Â :Â 
                      <span
                        style={
                          {
                            "opacity": "0.6",
                          }
                        }
                      >
                        boolean
                      </span>
                      <div
                        style={
                          {
                            "marginTop": "var(--ifm-table-cell-padding)",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </details>
          </li>
        </ul>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            ðŸš¨Â 
            No extra item(s) are authorized in this array
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified only with prefixItems 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            (boolean,integer)[]
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          array
        </span>
        <ul />
        <ul>
          <li>
            <details
              open={false}
            >
              <summary>
                <code>
                  items[0]
                </code>
                Â 
                <span>
                  boolean
                </span>
              </summary>
              <strong>
                type
              </strong>
              Â :Â 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                boolean
              </span>
              <div
                style={
                  {
                    "marginTop": "var(--ifm-table-cell-padding)",
                  }
                }
              />
            </details>
          </li>
          <li>
            <details
              open={false}
            >
              <summary>
                <code>
                  items[1]
                </code>
                Â 
                <span>
                  integer
                </span>
              </summary>
              <strong>
                type
              </strong>
              Â :Â 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                integer
              </span>
              <div
                style={
                  {
                    "marginTop": "var(--ifm-table-cell-padding)",
                  }
                }
              />
            </details>
          </li>
        </ul>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            ðŸš¨Â 
            No extra item(s) are authorized in this array
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified with items and contains 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            (number,...,string,...)[]
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          array
        </span>
        <ul>
          <li>
            <details
              open={false}
            >
              <summary>
                <code>
                  items[0]
                </code>
                Â 
                <span>
                  number
                </span>
              </summary>
              <strong>
                type
              </strong>
              Â :Â 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
              <div
                style={
                  {
                    "marginTop": "var(--ifm-table-cell-padding)",
                  }
                }
              />
            </details>
          </li>
        </ul>
        <ul>
          <li>
            <details
              open={false}
            >
              <summary>
                <code>
                  contains
                </code>
                Â 
                <span>
                  string
                </span>
              </summary>
              <strong>
                type
              </strong>
              Â :Â 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
              <div
                style={
                  {
                    "marginTop": "var(--ifm-table-cell-padding)",
                  }
                }
              />
            </details>
          </li>
        </ul>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Multiple types 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          number
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Not (integer) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            NOT (integer)
          </span>
        </summary>
        <div>
          <span
            className="badge badge--danger"
          >
            not
          </span>
          <br />
          <strong>
            type
          </strong>
          Â :Â 
          <span
            style={
              {
                "opacity": "0.6",
              }
            }
          >
            integer
          </span>
          <div
            style={
              {
                "marginTop": "var(--ifm-table-cell-padding)",
              }
            }
          />
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Number without explicit type 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          number
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            <strong>
              Possible values :
            </strong>
            Â 
            <code>
              multiple of 10
            </code>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test OR / XOR / AND 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            string OR number
          </span>
        </summary>
        <div>
          <span
            className="badge badge--info"
          >
            anyOf
          </span>
          <div
            className="tabs-container"
          >
            <ul
              aria-orientation="horizontal"
              className="tabs"
              role="tablist"
            >
              <li
                aria-selected={true}
                onClick={[Function]}
                tabIndex={0}
              >
                1
              </li>
              <li
                aria-selected={false}
                onClick={[Function]}
                tabIndex={-1}
              >
                2
              </li>
            </ul>
            <div>
              <div
                hidden={false}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    string
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  >
                    <div>
                      <strong>
                        Length :
                      </strong>
                      Â 
                      <code>
                        &lt;= 5 character(s)
                      </code>
                    </div>
                  </div>
                </div>
              </div>
              <div
                hidden={true}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    number
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  >
                    <div>
                      <strong>
                        Possible values :
                      </strong>
                      Â 
                      <code>
                        &gt;= 0
                      </code>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </details>
    </li>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[1]
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <div>
          <span
            className="badge badge--info"
          >
            oneOf
          </span>
          <div
            className="tabs-container"
          >
            <ul
              aria-orientation="horizontal"
              className="tabs"
              role="tablist"
            >
              <li
                aria-selected={true}
                onClick={[Function]}
                tabIndex={0}
              >
                1
              </li>
              <li
                aria-selected={false}
                onClick={[Function]}
                tabIndex={-1}
              >
                2
              </li>
            </ul>
            <div>
              <div
                hidden={false}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    number
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  >
                    <div>
                      <strong>
                        Possible values :
                      </strong>
                      Â 
                      <code>
                        multiple of 5
                      </code>
                    </div>
                  </div>
                </div>
              </div>
              <div
                hidden={true}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    number
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  >
                    <div>
                      <strong>
                        Possible values :
                      </strong>
                      Â 
                      <code>
                        multiple of 3
                      </code>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </details>
    </li>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[2]
          </code>
          Â 
          <span>
            string
          </span>
        </summary>
        <div>
          <span
            className="badge badge--info"
          >
            allOf
          </span>
          <div
            className="tabs-container"
          >
            <ul
              aria-orientation="horizontal"
              className="tabs"
              role="tablist"
            >
              <li
                aria-selected={true}
                onClick={[Function]}
                tabIndex={0}
              >
                1
              </li>
              <li
                aria-selected={false}
                onClick={[Function]}
                tabIndex={-1}
              >
                2
              </li>
            </ul>
            <div>
              <div
                hidden={false}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    string
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  />
                </div>
              </div>
              <div
                hidden={true}
                role="tabpanel"
              >
                <div
                  role="tabpanel"
                >
                  <strong>
                    type
                  </strong>
                  Â :Â 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    string
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  >
                    <div>
                      <strong>
                        Length :
                      </strong>
                      Â 
                      <code>
                        &lt;= 5 character(s)
                      </code>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Object without explicit type 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            object
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          object
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            <strong>
              Length :
            </strong>
            Â 
            <code>
              &gt;= 3 propertie(s)
            </code>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Prefer title 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            My custom title
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          object
        </span>
        <ul>
          <li>
            <details
              open={false}
            >
              <summary>
                <strong>
                  text
                </strong>
                Â 
                <span>
                  string
                </span>
              </summary>
              <strong>
                type
              </strong>
              Â :Â 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
              <div
                style={
                  {
                    "marginTop": "var(--ifm-table-cell-padding)",
                  }
                }
              >
                <div>
                  <strong>
                    Constant value :
                  </strong>
                  Â 
                  <code>
                    Hello World
                  </code>
                </div>
              </div>
            </details>
          </li>
        </ul>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Simple array 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            array
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          array
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;
