// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified only with items 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              (
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                integer
              </span>
               
              <strong>
                OR
              </strong>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                boolean
              </span>
              )[]
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  array
                </span>
                <ul>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <code>
                          items[x]
                        </code>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          integer
                        </span>
                         
                        <strong>
                          OR
                        </strong>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          boolean
                        </span>
                      </summary>
                      <div>
                        <div>
                          <div
                            className="tabs-container"
                          >
                            <ul
                              aria-orientation="horizontal"
                              className="tabs"
                              role="tablist"
                            >
                              <li
                                aria-selected={true}
                                onClick={[Function]}
                                tabIndex={0}
                              >
                                <span
                                  style={
                                    {
                                      "opacity": "0.6",
                                    }
                                  }
                                >
                                  integer
                                </span>
                              </li>
                              <li
                                aria-selected={false}
                                onClick={[Function]}
                                tabIndex={-1}
                              >
                                <span
                                  style={
                                    {
                                      "opacity": "0.6",
                                    }
                                  }
                                >
                                  boolean
                                </span>
                              </li>
                            </ul>
                            <div>
                              <div
                                hidden={false}
                                role="tabpanel"
                              >
                                <div
                                  role="tabpanel"
                                >
                                  <strong>
                                    type
                                  </strong>
                                   : 
                                  <span
                                    style={
                                      {
                                        "opacity": "0.6",
                                      }
                                    }
                                  >
                                    integer
                                  </span>
                                  <div
                                    style={
                                      {
                                        "marginTop": "var(--ifm-table-cell-padding)",
                                      }
                                    }
                                  />
                                </div>
                              </div>
                              <div
                                hidden={true}
                                role="tabpanel"
                              >
                                <div
                                  role="tabpanel"
                                >
                                  <strong>
                                    type
                                  </strong>
                                   : 
                                  <span
                                    style={
                                      {
                                        "opacity": "0.6",
                                      }
                                    }
                                  >
                                    boolean
                                  </span>
                                  <div
                                    style={
                                      {
                                        "marginTop": "var(--ifm-table-cell-padding)",
                                      }
                                    }
                                  />
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </details>
                  </li>
                </ul>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                >
                  <div>
                    🚨 
                    No extra item(s) are authorized in this array
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified only with prefixItems 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              (
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                boolean
              </span>
              ,
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                integer
              </span>
              )[]
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  array
                </span>
                <ul>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <code>
                          items[0]
                        </code>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          boolean
                        </span>
                      </summary>
                      <div>
                        <div>
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            boolean
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          />
                        </div>
                      </div>
                    </details>
                  </li>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <code>
                          items[1]
                        </code>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          integer
                        </span>
                      </summary>
                      <div>
                        <div>
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            integer
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          />
                        </div>
                      </div>
                    </details>
                  </li>
                </ul>
                <ul>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <code>
                          items[x]
                        </code>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          none
                        </span>
                      </summary>
                      <div>
                        <div>
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            none
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            Always invalid
                          </div>
                        </div>
                      </div>
                    </details>
                  </li>
                </ul>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                >
                  <div>
                    🚨 
                    No extra item(s) are authorized in this array
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Array specified with items and contains 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              (
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
              ,
              ...
              ,
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
              ,
              ...
              )[]
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  array
                </span>
                <ul>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <code>
                          items[0]
                        </code>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          number
                        </span>
                      </summary>
                      <div>
                        <div>
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            number
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          />
                        </div>
                      </div>
                    </details>
                  </li>
                </ul>
                <li>
                  <details
                    open={false}
                  >
                    <summary>
                      <code>
                        items[..., x, ...]
                      </code>
                       
                      <span
                        style={
                          {
                            "opacity": "0.6",
                          }
                        }
                      >
                        string
                      </span>
                    </summary>
                    <div>
                      <div>
                        <strong>
                          type
                        </strong>
                         : 
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          string
                        </span>
                        <div
                          style={
                            {
                              "marginTop": "var(--ifm-table-cell-padding)",
                            }
                          }
                        />
                      </div>
                    </div>
                  </details>
                </li>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                />
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Multiple types 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                null
              </span>
               
              <strong>
                OR
              </strong>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  number
                </span>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                >
                  <div>
                    ❓ 
                    Nullable
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Not (integer) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <strong>
                NOT
              </strong>
               ( 
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                integer
              </span>
               ) 
            </summary>
            <div>
              <div>
                <div>
                  <span
                    className="badge badge--danger"
                  >
                    not
                  </span>
                  <br />
                  <strong>
                    type
                  </strong>
                   : 
                  <span
                    style={
                      {
                        "opacity": "0.6",
                      }
                    }
                  >
                    integer
                  </span>
                  <div
                    style={
                      {
                        "marginTop": "var(--ifm-table-cell-padding)",
                      }
                    }
                  />
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Number without explicit type 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  number
                </span>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                >
                  <div>
                    <strong>
                      Possible values :
                    </strong>
                     
                    <code>
                      multiple of 10
                    </code>
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test OR / XOR / AND 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
               
              <strong>
                OR
              </strong>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
            </summary>
            <div>
              <div>
                <div>
                  <span
                    className="badge badge--info"
                  >
                    anyOf
                  </span>
                  <div
                    className="tabs-container"
                  >
                    <ul
                      aria-orientation="horizontal"
                      className="tabs"
                      role="tablist"
                    >
                      <li
                        aria-selected={true}
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          string
                        </span>
                      </li>
                      <li
                        aria-selected={false}
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          number
                        </span>
                      </li>
                    </ul>
                    <div>
                      <div
                        hidden={false}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            string
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Length :
                              </strong>
                               
                              <code>
                                &lt;= 5 character(s)
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        hidden={true}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            number
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Possible values :
                              </strong>
                               
                              <code>
                                &gt;= 0
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[1]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
               
              <strong>
                XOR
              </strong>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                number
              </span>
            </summary>
            <div>
              <div>
                <div>
                  <span
                    className="badge badge--info"
                  >
                    oneOf
                  </span>
                  <div
                    className="tabs-container"
                  >
                    <ul
                      aria-orientation="horizontal"
                      className="tabs"
                      role="tablist"
                    >
                      <li
                        aria-selected={true}
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          number
                        </span>
                      </li>
                      <li
                        aria-selected={false}
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          number
                        </span>
                      </li>
                    </ul>
                    <div>
                      <div
                        hidden={false}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            number
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Possible values :
                              </strong>
                               
                              <code>
                                multiple of 5
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        hidden={true}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            number
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Possible values :
                              </strong>
                               
                              <code>
                                multiple of 3
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[2]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
               
              <strong>
                AND
              </strong>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                string
              </span>
            </summary>
            <div>
              <div>
                <div>
                  <span
                    className="badge badge--info"
                  >
                    allOf
                  </span>
                  <div
                    className="tabs-container"
                  >
                    <ul
                      aria-orientation="horizontal"
                      className="tabs"
                      role="tablist"
                    >
                      <li
                        aria-selected={true}
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          string
                        </span>
                      </li>
                      <li
                        aria-selected={false}
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          string
                        </span>
                      </li>
                    </ul>
                    <div>
                      <div
                        hidden={false}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            string
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        hidden={true}
                        role="tabpanel"
                      >
                        <div
                          role="tabpanel"
                        >
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            string
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Length :
                              </strong>
                               
                              <code>
                                &lt;= 5 character(s)
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Object without explicit type 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                object
              </span>
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  object
                </span>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                >
                  <div>
                    <strong>
                      Length :
                    </strong>
                     
                    <code>
                      &gt;= 3 propertie(s)
                    </code>
                  </div>
                </div>
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Prefer title 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              My custom title
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  object
                </span>
                <ul>
                  <li>
                    <details
                      open={false}
                    >
                      <summary>
                        <strong>
                          text
                        </strong>
                         
                        <span
                          style={
                            {
                              "opacity": "0.6",
                            }
                          }
                        >
                          string
                        </span>
                      </summary>
                      <div>
                        <div>
                          <strong>
                            type
                          </strong>
                           : 
                          <span
                            style={
                              {
                                "opacity": "0.6",
                              }
                            }
                          >
                            string
                          </span>
                          <div
                            style={
                              {
                                "marginTop": "var(--ifm-table-cell-padding)",
                              }
                            }
                          >
                            <div>
                              <strong>
                                Constant value :
                              </strong>
                               
                              <code>
                                Hello World
                              </code>
                            </div>
                          </div>
                        </div>
                      </div>
                    </details>
                  </li>
                </ul>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                />
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - generateFriendlyName cases test Simple array 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <div>
    <div>
      <strong>
        type
      </strong>
       : 
      <span
        style={
          {
            "opacity": "0.6",
          }
        }
      >
        array
      </span>
      <ul>
        <li>
          <details
            open={false}
          >
            <summary>
              <code>
                items[0]
              </code>
               
              <span
                style={
                  {
                    "opacity": "0.6",
                  }
                }
              >
                array
              </span>
            </summary>
            <div>
              <div>
                <strong>
                  type
                </strong>
                 : 
                <span
                  style={
                    {
                      "opacity": "0.6",
                    }
                  }
                >
                  array
                </span>
                <div
                  style={
                    {
                      "marginTop": "var(--ifm-table-cell-padding)",
                    }
                  }
                />
              </div>
            </div>
          </details>
        </li>
      </ul>
      <div
        style={
          {
            "marginTop": "var(--ifm-table-cell-padding)",
          }
        }
      />
    </div>
  </div>
</details>
`;
