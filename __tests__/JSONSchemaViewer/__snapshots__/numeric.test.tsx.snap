// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaViewer - numeric test integer 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    integer
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    A simple integer
  </div>
</details>
`;

exports[`JSONSchemaViewer - numeric test multipleOf 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    integer
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Possible values :
      </strong>
       
      <code>
        multiple of 10
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - numeric test number 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    number
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - numeric test ranges (1) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    number
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Possible values :
      </strong>
       
      <code>
        &gt;= 0
      </code>
       
      AND
       
      <code>
        &lt; 100
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - numeric test ranges (2) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    number
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Possible values :
      </strong>
       
      <code>
        &gt; 1
      </code>
       
      AND
       
      <code>
        &lt;= 100
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - numeric test ranges (3) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    number
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Possible values :
      </strong>
       
      <code>
        &gt; 1
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - numeric test ranges (4) 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
   : 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    number
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Possible values :
      </strong>
       
      <code>
        &lt; 1
      </code>
    </div>
  </div>
</details>
`;
