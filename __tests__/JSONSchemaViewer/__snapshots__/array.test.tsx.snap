// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaViewer - Array type test 0 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - Array type test 1 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            contains
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          number
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - Array type test 2 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          number
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  />
</details>
`;

exports[`JSONSchemaViewer - Array type test 3 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Length :
      </strong>
      Â 
      <code>
        &gt;= 2
      </code>
      Â 
      AND
      Â 
      <code>
        &lt;= 3
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 4 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            contains
          </code>
          Â 
          <span>
            integer
          </span>
          Â 
          <strong>
            required
          </strong>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          integer
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Must contain : 
      </strong>
      Â 
      <code>
        at least 2 valid item(s)
      </code>
      Â 
      AND
      Â 
      <code>
        at most 3 valid item(s)
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 5 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <ul />
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            number
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          number
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          The address number
        </div>
      </details>
    </li>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[1]
          </code>
          Â 
          <span>
            string
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          string
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        />
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          The name of the street
        </div>
      </details>
    </li>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[2]
          </code>
          Â 
          <span>
            unknown
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          unknown
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            <strong>
              Possible values :
            </strong>
            Â 
            <code>
              ["Street","Avenue","Boulevard"]
            </code>
          </div>
        </div>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          The type of street
        </div>
      </details>
    </li>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[3]
          </code>
          Â 
          <span>
            unknown
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <span
          style={
            {
              "opacity": "0.6",
            }
          }
        >
          unknown
        </span>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          <div>
            <strong>
              Possible values :
            </strong>
            Â 
            <code>
              ["NW","NE","SW","SE"]
            </code>
          </div>
        </div>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          The city quadrant of the address
        </div>
      </details>
    </li>
  </ul>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      ðŸš¨Â 
      No extra item(s) are authorized in this array
    </div>
  </div>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    Represent a street address such as ['1600','Pennsylvania','Avenue','NW']
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 6 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Unique items :
      </strong>
      Â 
      <code>
        yes
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 7 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Length :
      </strong>
      Â 
      <code>
        &gt;= 1
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 8 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Length :
      </strong>
      Â 
      <code>
        &lt;= 5
      </code>
    </div>
  </div>
</details>
`;

exports[`JSONSchemaViewer - Array type test 9 1`] = `
<details
  open={true}
>
  <summary>
    <strong>
      Schema
    </strong>
  </summary>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      <strong>
        Must contain : 
      </strong>
      Â 
      <code>
        at most 3 valid item(s)
      </code>
    </div>
  </div>
</details>
`;
