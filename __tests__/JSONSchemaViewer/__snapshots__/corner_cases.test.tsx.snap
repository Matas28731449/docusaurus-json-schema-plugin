// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaViewer - corner cases CreateArray - boolean schema 1`] = `null`;

exports[`JSONSchemaViewer - corner cases CreateArray - sub properties as boolean schema 1`] = `
[
  <strong>
    type
  </strong>,
  "Â :Â ",
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    array
  </span>,
  <ul />,
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span>
            unknown
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <strong>
          none
        </strong>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          Always invalid
        </div>
      </details>
    </li>
  </ul>,
  <ul>
    <li>
      <details
        open={false}
      >
        <summary>
          <code>
            contains
          </code>
          Â 
          <span>
            unknown
          </span>
        </summary>
        <strong>
          type
        </strong>
        Â :Â 
        <strong>
          none
        </strong>
        <div
          style={
            {
              "marginTop": "var(--ifm-table-cell-padding)",
            }
          }
        >
          Always invalid
        </div>
      </details>
    </li>
  </ul>,
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      ðŸš¨Â 
      No extra item(s) are authorized in this array
    </div>
  </div>,
]
`;

exports[`JSONSchemaViewer - corner cases CreateNodes - boolean schema (false) 1`] = `
[
  <strong>
    type
  </strong>,
  "Â :Â ",
  <strong>
    none
  </strong>,
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    Always invalid
  </div>,
]
`;

exports[`JSONSchemaViewer - corner cases CreateNodes - boolean schema (true) 1`] = `
[
  <strong>
    type
  </strong>,
  "Â :Â ",
  <strong>
    any
  </strong>,
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    Always valid
  </div>,
]
`;

exports[`JSONSchemaViewer - corner cases CreateObject - boolean schema 1`] = `null`;

exports[`JSONSchemaViewer - corner cases CreateObject - sub properties as boolean schema 1`] = `
[
  <strong>
    type
  </strong>,
  "Â :Â ",
  <span
    style={
      {
        "opacity": "0.6",
      }
    }
  >
    object
  </span>,
  <div
    style={
      {
        "marginTop": "var(--ifm-table-cell-padding)",
      }
    }
  >
    <div>
      ðŸš¨Â 
      No extra propertie(s) are authorized in this object
    </div>
  </div>,
]
`;

exports[`JSONSchemaViewer - corner cases SchemaComposition - boolean schema 1`] = `null`;

exports[`JSONSchemaViewer - corner cases SchemaConditional - boolean schema 1`] = `null`;
